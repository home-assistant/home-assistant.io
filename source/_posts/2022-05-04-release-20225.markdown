---
layout: post
title: "2022.5: Streamlining settings"
description: "Streamlining the settings menu, an Insteon control panel, lots of new features for automations and scripts, and much more!"
date: 2022-05-04 00:00:00
date_formatted: "May 04, 2022"
author: Franck Nijhof
author_twitter: frenck
comments: true
categories:
- Release-Notes
- Core
og_image: /images/blog/2022-05/social.png
---

<a href='/integrations/#version/2022.5'><img src='/images/blog/2022-05/social.png' style='border: 0;box-shadow: none;'></a>

Home Assistant Core 2022.5!

And, as often said: "All things seem possible in May!". Well, possibilities
we have for you this last month of spring.

The most visible thing this release is the next iteration of the settings menu,
of which the result, to me personally, makes tons of sense. It took me a bit
to get used to, but honestly I like it! ðŸ¤©

Meanwhile, at [Nabu Casa], they released annual subscriptions for Home Assistant
Cloud worldwide (except for Canada, the UK, and the EU, they will follow soon with
local currency support).

I'm also very excited to present you with a whole lot of new powerful
automations and scripts features! Some for the UI, but there are some real
game changers in there that our YAML community will love! ðŸ¤–

Enjoy the release!

../Frenck

[Nabu Casa]: https://www.nabucasa.com/

<!--more-->

- [Reorganized settings menu](#reorganized-settings-menu)
- [Find entities even quicker than before](#find-entities-even-quicker-than-before)
- [New automation & script features](#new-automation--script-features)
  - [If-then](#if-then)
  - [Calendar trigger](#calendar-trigger)
  - [For each](#for-each)
  - [Disable any trigger, condition, or action](#disable-any-trigger-condition-or-action)
  - [Continue on error](#continue-on-error)
  - [Stopping a script or automation](#stopping-a-script-or-automation)
  - [Parallelizing actions](#parallelizing-actions)
  - [Using a single state trigger for multiple entities](#using-a-single-state-trigger-for-multiple-entities)
  - [Trigger on not matching to/from states](#trigger-on-not-matching-tofrom-states)
  - [Shorthand notation for logical conditions](#shorthand-notation-for-logical-conditions)
- [Gauge card segment colors](#gauge-card-segment-colors)
- [Database optimizations](#database-optimizations)
- [Update entity updates](#update-entity-updates)
- [Insteon control panel](#insteon-control-panel)
- [Template selector](#template-selector)
- [Other noteworthy changes](#other-noteworthy-changes)
- [New Integrations](#new-integrations)
- [Integrations now available to set up from the UI](#integrations-now-available-to-set-up-from-the-ui)
- [Release 2022.5.1 - May 5](#release-202251---may-5)
- [Release 2022.5.2 - May 6](#release-202252---may-6)
- [Release 2022.5.3 - May 8](#release-202253---may-8)
- [Release 2022.5.4 - May 12](#release-202254---may-12)
- [Release 2022.5.5 - May 18](#release-202255---may-18)
- [Need help? Join the community!](#need-help-join-the-community)
- [Backward-incompatible changes](#backward-incompatible-changes)
- [Farewell to the following](#farewell-to-the-following)
- [All changes](#all-changes)


## Reorganized settings menu

A couple of releases ago, we started reorganizing the configuration menu, and
this release is bringing the next big step in that reorganization.

The goal is to have everything in a single logical place, and after user tests
and many discussions in frontend and UX channels, this is what the menu
now looks like:

<img class="no-shadow" src='/images/blog/2022-05/configuration-menu.png' alt='Screenshot showing the new configuration menu structure'>

Most notably, it's been renamed from "Configuration" to "Settings", and we have a
brand new "System" submenu (shown on the right in the above screenshot).

Are you running Home Assistant OS? The Supervisor has been fully merged into
the settings menu to provide a seamless/unified experience. It removes
weirdness like having a network section in one menu and the Supervisor section.

Blueprints moved to the automations & scenes section, and by popular request:
Helpers have moved to the devices & services page.

YAML configuration tools have a new home in the developer tools, a more
logical place for YAML configuration checks and reloading.

You might notice some of the new menu items are fairly empty. For those menus,
like "Storage" and "Hardware", we have more content planned soon!

Just to be sure, we have added a list of changes to the backward-incompatible changes section;
please check those out in case you are missing something.

## Find entities even quicker than before

Looking to access that one entity quickly? But it isn't on your dashboard?

The [Quick Bar](/docs/tools/quick-bar/) helps with that; just press `e` anywhere
you are in Home Assistant. This release adds a quick search button to the
dashboards as well, so you can look up and access any entity you need,
even when it is not on your current dashboard.

<img class="no-shadow" src='/images/blog/2022-05/entity-finder.png' alt='Screenshot showing the new quick search button'>

To conserve space, the search is not shown on mobile devices; but is available
via the overflow menu (the three dots in the top right).

## New automation & script features

This release is packed with new automation & script features! Some have been
added to the UI, and others are advanced features that are only available when
using YAML.

One thing almost all these changes have in common: They have been requested
and voted for by the community in our [Feature Requests] forum.

[Feature Requests]: https://community.home-assistant.io/c/feature-requests/13

### If-then

When we introduced the [Choose action](/docs/scripts/#choose-a-group-of-actions),
our goal was to provide a structure that allowed for other action sequences
selectively based on conditions.

While this structure is very flexible and extensive, there was still a desire
for an if-then(-else) structure that is small, simple, compact, and clean.
This release brings you just that.

The new if-then action is available via YAML and via the UI using automations
and scripts editors.

<img class="no-shadow" src='/images/blog/2022-05/if-then.png' alt='Screenshot showing If-then'>

{% details "If-then example in YAML" %}

If YAML automations are more your thing, this is how you can use the new
if-then action in your automations and scripts.

```yaml
actions:
  - if:
      - alias: "If no one is home"
        condition: state
        entity_id: zone.home
        state: 0
    then:
      - alias: "Then start cleaning already!"
        service: vacuum.start
        target:
          area_id: living_room
    # The `else` is fully optional and can be omitted
    else:
      - service: notify.notify
        data:
          message: "Skipped cleaning, someone is home!"
```

Note that that `if` also supports a shorthand condition template (if that
is more your style), for example:

{% raw %}

```yaml
actions:
  - if: "{{ states('zone.home') == 0 }}"
    then:
      - alias: "Then start cleaning already!"
        service: vacuum.start
        target:
          area_id: living_room
```

{% endraw %}

{% enddetails %}

[More information can be found in the scripts documentation](/docs/scripts/#if-then).

### Calendar trigger

[@allenporter] gave the [Calendar] integration (and the [Google Calendars]
integration) lots of love. In the process, a new Calendar trigger was added,
which is available for use in your automations.

<p class='img'>
<img class="no-shadow" src='/images/blog/2022-05/calendar-trigger.png' alt='Screenshot showing the new calendar trigger in the UI'>
The new calendar trigger is available in the automation editor.
</p>

This brand new trigger is slightly more flexible than the (previously only
other option) state trigger. It is available for automations in YAML as well,
and the trigger provides [lots of trigger variables](/docs/automation/templating/#calendar)
you can use in your templates.

{% details "Calendar trigger example in YAML" %}

The calendar trigger is, of course, also available in YAML. This automation
example shows the use of the trigger and some of the variables it provides.

{% raw %}

```yaml
automation:
  trigger:
    - platform: calendar
      event: start
      entity_id: calendar.personal
  action:
    - service: persistent_notification.create
      data:
        message: >-
          Event {{ trigger.calendar_event.summary }} @
          {{ trigger.calendar_event.start }}
```

{% endraw %}

{% enddetails %}

[More information can be found in the Calendar integration documentation](/integrations/calendar/#automation).

[@allenporter]: https://github.com/allenporter
[Calendar]: /integrations/calendar/
[Google Calendars]: /integrations/google

### For each

We had several options available to repeat a [group of actions]. For example,
repeating based on a count, while a condition passes, or until a condition
passes.

These are very powerful, but repeating a sequence for each item in a list
was also requested and voted for. This release adds: For each.

This is an advanced feature and is only available for use in automations written
manually in YAML. Here is an example that sends out two notifications in
different languages:

{% raw %}

```yaml
repeat:
  for_each:
    - language: English
      message: Hello World
    - language: Dutch
      message: Hallo Wereld
  sequence:
    - service: notify.phone
      data:
        title: "Message in {{ repeat.item.language }}"
        message: "{{ repeat.item.message }}!"
```

{% endraw %}

Each item in the list will be run against a sequence of actions, and the item
is available as a variable you can use in your templates. The items you can
provide to `for_each` can be mappings, lists of just strings, and even complex
templates that provide a list as a result.

[More information can be found in the scripts documentation](/docs/scripts/#for-each).

[group of actions]: /docs/scripts/#repeat-a-group-of-actions

### Disable any trigger, condition, or action

Sometimes, you may want to disable a specific trigger, action, or condition,
whether this is for testing, a temporary workaround, or any other reason.

In YAML, you'd comment out parts of your automation, but if you wanted
to do that in the UI, the only option you have is to delete it from the
automation or script.

In this release, we added support for disabling a trigger, action, or condition;
without the need for removing it or commenting it out! A disabled trigger
won't fire, a disabled condition always passes, and a disabled action is
skipped.

<img class="no-shadow" src='/images/blog/2022-05/disabled-condition.png' alt='Screenshot showing a disabled condition in a UI automation'>

{% details "Disabled example in YAML" %}

If YAML automations are more your thing, this disabled feature is still
helpful. While, of course, you can still comment parts out easily; using
this feature will make disabled parts still show up in automation and
script debug traces.

Every trigger, condition, and action now has an `enabled` parameter. Which
you can set to `false` to disable that section. For example:

```yaml
# Example automation with a disabled trigger
automation:
  trigger:
    # This trigger will not trigger, as it is disabled.
    # This automation does not run when the sun is set.
    - enabled: false
      platform: sun
      event: sunset

    # This trigger will fire, as it is not disabled.
    - platform: time
      at: "15:32:00"
```

{% enddetails %}

More information can be found in the disabled [Triggers], [Conditions],
and [Actions] documentation.

[Actions]: /docs/scripts/#disabling-an-action
[Conditions]: /docs/scripts/conditions#disabling-a-condition
[Triggers]: /docs/automation/trigger/#disabling-a-trigger

### Continue on error

An automation runs a sequence of actions. One of the questions we
often see/read/get is: "If one of the actions fails, why does the whole
automation stop?"

Good question! To answer this, we have added: Continue on error.

It allows specific steps in an automation or script sequence to fail
without interrupting the rest of the sequence.

This advanced feature is currently only available for automations and scripts
written in YAML. The following example shows an automation action that will
always run the second action, even if the first action fails with an error:

```yaml
action:
  - alias: "If this one fails..."
    continue_on_error: true
    service: notify.super_unreliable_service_provider
    data:
      message: "I'm going to error out..."

  - alias: "This one will still run!"
    service: persistent_notification.create
    data:
      title: "Hi there!"
      message: "I'm fine..."
```

[More information can be found in the scripts documentation](/docs/scripts/#continuing-on-error).

### Stopping a script or automation

You can now stop a script or automation halfway using the Stop action.
Combined with the previously mentioned new If-then action, this can be used
to stop an automation or script conditionally.

For example, this can be helpful if you want just part of an automation to
run when you are home and run it at full when you are away.

This feature is available both via the UI and YAML.

<img class="no-shadow" src='/images/blog/2022-05/stop-action.png' alt='Screenshot showing the new stop action'>

{% details "Stop example in YAML" %}

When writing YAML automations or scripts, this is how the Stop action looks:

```yaml
action:
  - stop: "Stop right here!"
    # Optionally mark it as an unexpected error
    error: true
```

{% enddetails %}

[More information can be found in the scripts documentation](/docs/scripts/#stopping-a-script-sequence)

### Parallelizing actions

This release introduces a highly advanced feature that provides a way to
parallelize actions.

By default, all actions in Home Assistant run sequentially. This means the
next action is only started after the current action has been completed.

Running in serial is not always needed, for example, if the sequence of actions
doesnâ€™t rely on each other and order doesnâ€™t matter. For those cases, the
parallel action can be used to run the actions in the sequence in parallel,
meaning all the actions are started simultaneously.

```yaml
automation:
  - trigger:
      - platform: state
        entity_id: binary_sensor.motion
        to: "on"
    action:
      - parallel:
          - service: notify.person1
            data:
              message: "These messages are sent at the same time!"
          - service: notify.person2
            data:
              message: "These messages are sent at the same time!"
```

This feature is partly available via the UI; however, as said: This is quite
a powerful and advanced feature, and it comes with caveats. Be sure to check
out the [script documentation on parallelizing actions](/docs/scripts/#parallelizing-actions)
before deciding to use it.

### Using a single state trigger for multiple entities

If you write automations in YAML, you are probably already aware of the
ability to trigger on multiple entities in a single trigger; it has been
around for quite some time.

And now also available in the UI. A small addition that might help you cut
down the length of your UI-managed automations.

<img class="no-shadow" src='/images/blog/2022-05/trigger-multiple-entities.png' alt='Screenshot showing multiple entites in a single trigger from the UI.'>

### Trigger on not matching to/from states

This is a YAML only feature we have added to the state triggers: Triggering
on not matching to/from states. Yes, you read that correctly. When it **not**
matches it triggers.

Instead of `from`, you can now use `not_from` and instead of `to`, you can now
use `not_to`. This example trigger will only trigger if the state was previously
not "unavailable" or "unknown":

```yaml
trigger:
  - platform: state
    entity_id: light.living_room
    not_from:
      - "unavailable"
      - "unknown"
    to: "on"
```

[More information can be found on the state condition documentation](/docs/scripts/conditions#state-condition).

### Shorthand notation for logical conditions

A neat little YAML feature [@thomasloven] added can make your YAML-based
automations and scripts looks significantly cleaner.

Logical conditions (also known as `and`, `or`, `not`) now have a shorthand
notation. Some example pseudo code to show them all:

```yaml
or:
  - <condition>
  - and:
    - <condition>
    - <condition>
  - not:
    - <condition>
```

In the above `<condition>`, of course, needs to be replaced with an actual
condition, but the short new syntax of `or`, `and`, and `not` is clearly visible.

[More information can be found on the condition documentation](/docs/scripts/conditions#logical-conditions).

[@thomasloven]: https://github.com/thomasloven

## Gauge card segment colors

An excellent addition by [@Netzwerkfehler] is the ability to freely define the
number of segments, and their colors, of the gauge card!

<p class='img'>
<img src='/images/dashboards/lovelace_gauge_segments.png' alt='Screenshot of the gauge card with multiple colored segments.'>
Screenshot of the gauge card with multiple colored segments.
</p>

Helpful if you'd like to define upper and lower sensor
limits on your gauge, as shown in the example above. The configuration example
used for the above screenshot can be found in the [Gauge Card documentation].

[@Netzwerkfehler]: https://github.com/Netzwerkfehler
[Gauge Card documentation]: /dashboards/gauge/#examples

## Database optimizations

The last release focused on reducing the size of the database and optimizing
the writing of data to the database.

While there are some additional optimizations in this release to further reduce
the amount of data that needs to be written, in this release, we focused on how
often data is read from the database and optimizing its scale for larger setups.

This release is for you if you have many sensors generating statistics, as
compiling statistics now takes 30-100x less time.

Are you using the [History Stats] integration? The number of database queries
needed for most sensors with a fixed start time is 99% less.

We have made additional improvements to the history APIs to speed up retrieving
from the database, reducing API response times by 15-35% on average.

Finally, we have reduced the memory used during database migrations to smooth
future migrations and are now automatically repacking your database once a
month to keep things tidy.

[History Stats]: /integrations/history_stats

## Update entity updates

In the [previous release, we introduced update entities][update-entities].
It was a well-received concept, and we added a couple of improvements to it.

Almost all feedback we got involved "Skipping an update"-related functionality.
Can I unskip an update? How to see which updates I have skipped?

To help with these, we added a dedicated settings menu for updates. It provides
an overview of all pending updates and provides the ability to view updates
you have previously skipped.

<img class="no-shadow" src='/images/blog/2022-05/settings-updates.png' alt='Screenshot showing the new updates page in the settings menu'>

Skipped updates can now be "unskipped" again too! This works in the same way
as skipping an update but can also be done in automations using this new
{% my developer_call_service service="service" %}.

Two new integrations have implemented update entities this release:

- [Sensibo], done by [@gjohansson-ST]
- [AVM FRITZ!Box Tools], done by [@Mask3007]

And finally, if you'd like to receive update notifications: The
["Update notifications" Blueprint][update-notify] by [@mdegat01] has been
getting quite some attention in the community this month!

[@gjohansson-ST]: https://github.com/gjohansson-ST
[@Mask3007]: https://github.com/Mask3007
[@mdegat01]: https://github.com/mdegat01
[AVM FRITZ!Box Tools]: /integrations/fritz
[Sensibo]: /integrations/sensibo
[update-entities]: /blog/2022/04/06/release-20224/#introducing-update-entities
[update-notify]: https://community.home-assistant.io/t/update-notifications-core-os-addons-hacs-etc/409161

## Insteon control panel

In case you have missed it, the US smart home company Insteon went out of
business and shut down its cloud services.

[Read more about it in our dedicated blog post][insteon-blog].

As Home Assistant works with Insteon locally, we have seen quite a few new
users joining our community; so:

ðŸ‘‹ Hello, dear Insteon user. We have a new control panel for you!

<p class='img'>
<img class="no-shadow" src='/images/blog/2022-05/insteon-panel.png' alt='Screenshot showing the new Insteon control panel'>
The new Insteon control panel allows you to manage your Insteon devices.
</p>

This new control panel allows you to manage your Insteon device from
Home Assistant directly, just like you would have done previously with
the Insteon application.

Thanks for you hard work on this [Tom Harris]!

[Tom Harris]: https://github.com/teharris1
[insteon-blog]: /blog/2022/04/19/for-insteon-users/

## Template selector

A new [selector] is added: The [Template selector].

This new selector can be used in, for example, Blueprints, scripts fields, or
in a (custom) integration. It provides a nice code editor with Jinja syntax
highlighting and entity auto-completion.

We have deployed it in the automations and scripts editor too! So, you
now get this editor when editing your template conditions or wait for template
actions in the UI.

<img class="no-shadow" src='/images/blog/2022-05/template-editor.png' alt='Screenshot showing the template editor'>

[selector]: /docs/blueprint/selectors/
[Template selector]: /docs/blueprint/selectors/#template-selector

## Other noteworthy changes

There is much more juice in this release; here are some of the other
noteworthy changes this release:

- Every script now automatically gets a unique ID, which means you can edit
  their name, icon and assign them to areas straight from the UI!
  Thanks, [@frenck]!
- If you run the Z-Wave JS server manually in, for example, a Docker container,
  it will now be automatically discovered on your network. Thanks [@raman325]!
- Template entities now have a `this` variable available, which is a reference
  to the state of the template entity itself. Awesome work [@akloeckner] and
  [@emontnemery]!
- Running Home Assistant Core or Container? [@frenck] added the
  {% my developer_call_service service="backup.create" %} service to the
  [backup] integration allowing you to create an automation to create backups
  on a schedule.
- [@sisimomo] added Markdown support to Blueprint input descriptions, allowing
  you to add links to, for example, documentation in your Blueprints.
- The [Shelly] integration now supports authentication for the second generation
  devices, thanks [@thecode]!
- [State conditions] with multiple entities can now also match if any of the
  entities match the condition (instead of all), thanks [@frenck]!
- [Sonos] now has a favorites sensor so that you can access and use your
  favorites in your automations, scripts, and templates. Thanks [@jjlawren]!
- [@dmulcahey] added support for configuring the power-on state of devices
  that have this configuration option to [ZHA]. Nice!
- Sensors now have a new device class available: "duration". Thanks, [@bdraco]!
- The output of [Media Selector] can now be directly used with play media
  service calls in your Blueprints. Awesome, [@emontnemery]!
- [@raman325] added frontend support for Sirens, so you can actually turn one
  on from the UI. ðŸš¨ Alarming news [@raman325]!
- [@frenck] added a persons attribute to zones, which indicates who is
  currently in a zone.
- When customizing the device class / "Show as" of an entity in the UI, you can
  now set it to nothing/empty as well. Thanks, [@zsarnett]!
- [@rdfurman] Added support to the [Honeywell] Total Connect Comfort (US)
  integration for outdoor sensors. Awesome!
- [Philips TV] now provides a switch to turn on/off the "Ambilight+Hue" syncing
  (if your TV model supports that). Thanks, [@bramstroker]!

[@akloeckner]: https://github.com/akloeckner
[@bdraco]: https://github.com/bdraco
[@bramstroker]: https://github.com/bramstroker
[@dmulcahey]: https://github.com/dmulcahey
[@emontnemery]: https://github.com/emontnemery
[@frenck]: https://github.com/frenck
[@jjlawren]: https://github.com/jjlawren
[@raman325]: https://github.com/raman325
[@rdfurman]: https://github.com/rdfurman
[@sisimomo]: https://github.com/sisimomo
[@thecode]: https://github.com/thecode
[@zsarnett]: https://github.com/zsarnett
[backup]: /integrations/backup
[Honeywell]: /integrations/honeywell
[Media Selector]: /docs/blueprint/selectors/#media-selector
[Philips TV]: /integrations/philips_js
[Shelly]: /integrations/shelly
[Sonos]: /integrations/sonos
[State conditions]: /docs/scripts/conditions#state-condition
[ZHA]: /integrations/zha

## New Integrations

We welcome the following new integrations this release:

- [Meater], added by[@Sotolotl]
- [QNAP QSW], added by [@Noltari]
- [SENZ], added by [@milanmeu]
- [SlimProto (Squeezebox Players)], added by [@marcelveldt]
- [Trafikverket Ferry], added by [@gjohansson-ST]

[@marcelveldt]: https://github.com/marcelveldt
[@milanmeu]: https://github.com/milanmeu
[@Noltari]: https://github.com/Noltari
[@Sotolotl]: https://github.com/Sotolotl
[@gjohansson-ST]: https://github.com/gjohansson-ST
[Meater]: /integrations/meater
[QNAP QSW]: /integrations/qnap_qsw
[SENZ]: /integrations/senz
[SlimProto (Squeezebox Players)]: /integrations/slimproto
[Trafikverket Ferry]: /integrations/trafikverket_ferry


## Integrations now available to set up from the UI

The following integrations are now available via the Home Assistant UI:

- [SABnzbd], done by [@shaiu]
- [SQL], done by [@gjohansson-ST]
- [Steam], done by [@tkdrob]
- [Tautulli], done by [@tkdrob]

[@gjohansson-ST]: https://github.com/gjohansson-ST
[@shaiu]: https://github.com/shaiu
[@tkdrob]: https://github.com/tkdrob
[SABnzbd]: /integrations/sabnzbd
[SQL]: /integrations/sql
[Steam]: /integrations/steam_online
[Tautulli]: /integrations/tautulli

## Release 2022.5.1 - May 5

- fix reading of battery messages ([@2Fake] - [#70659]) ([devolo_home_control docs])
- Only test for EncryptedBridge in Samsung J/H models ([@epenet] - [#71291]) ([samsungtv docs])
- Ensure rachio retries setup later when cloud service is broken ([@bdraco] - [#71300]) ([rachio docs])
- Fix lutron caseta occupancy sensors ([@bdraco] - [#71309]) ([lutron_caseta docs])
- Update aioairzone to v0.4.3 ([@Noltari] - [#71312]) ([airzone docs])
- Fix apple tv warning ([@balloob] - [#71321]) ([apple_tv docs])
- Fix Meater ([@emontnemery] - [#71324]) ([meater docs])
- Bump numpy to 1.21.6 ([@pvizeli] - [#71325]) ([opencv docs]) ([tensorflow docs]) ([trend docs]) ([iqvia docs]) ([compensation docs])
- Only lookup unknown Google Cast models once ([@emontnemery] - [#71348]) ([cast docs])
- Bump library version ([@bieniu] - [#71349]) ([nam docs])
- Ignore loading system entity category ([@balloob] - [#71361])
- Fix importing blueprints ([@balloob] - [#71365]) ([blueprint docs])
- Add unique ids to sensors ([@shaiu] - [#71367]) ([sabnzbd docs])
- Bump pychromecast to 12.1.1 ([@balloob] - [#71377]) ([cast docs])

[#70659]: https://github.com/home-assistant/core/pull/70659
[#71291]: https://github.com/home-assistant/core/pull/71291
[#71300]: https://github.com/home-assistant/core/pull/71300
[#71309]: https://github.com/home-assistant/core/pull/71309
[#71312]: https://github.com/home-assistant/core/pull/71312
[#71321]: https://github.com/home-assistant/core/pull/71321
[#71324]: https://github.com/home-assistant/core/pull/71324
[#71325]: https://github.com/home-assistant/core/pull/71325
[#71348]: https://github.com/home-assistant/core/pull/71348
[#71349]: https://github.com/home-assistant/core/pull/71349
[#71361]: https://github.com/home-assistant/core/pull/71361
[#71365]: https://github.com/home-assistant/core/pull/71365
[#71367]: https://github.com/home-assistant/core/pull/71367
[#71377]: https://github.com/home-assistant/core/pull/71377
[@2Fake]: https://github.com/2Fake
[@Noltari]: https://github.com/Noltari
[@balloob]: https://github.com/balloob
[@bdraco]: https://github.com/bdraco
[@bieniu]: https://github.com/bieniu
[@emontnemery]: https://github.com/emontnemery
[@epenet]: https://github.com/epenet
[@pvizeli]: https://github.com/pvizeli
[@shaiu]: https://github.com/shaiu
[airzone docs]: /integrations/airzone/
[apple_tv docs]: /integrations/apple_tv/
[blueprint docs]: /integrations/blueprint/
[cast docs]: /integrations/cast/
[compensation docs]: /integrations/compensation/
[devolo_home_control docs]: /integrations/devolo_home_control/
[iqvia docs]: /integrations/iqvia/
[lutron_caseta docs]: /integrations/lutron_caseta/
[meater docs]: /integrations/meater/
[nam docs]: /integrations/nam/
[opencv docs]: /integrations/opencv/
[rachio docs]: /integrations/rachio/
[sabnzbd docs]: /integrations/sabnzbd/
[samsungtv docs]: /integrations/samsungtv/
[tensorflow docs]: /integrations/tensorflow/
[trend docs]: /integrations/trend/

## Release 2022.5.2 - May 6

- Upgrade glances_api to 0.3.5 ([@difelice] - [#71243]) ([glances docs])
- Fix Canary camera stream blocking call ([@0bmay] - [#71369]) ([canary docs])
- Update Zigpy attribute cache for switch devices that do not report state ([@dmulcahey] - [#71417]) ([zha docs])
- Stringify enums in selectors ([@balloob] - [#71441]) ([blueprint docs])

[#71243]: https://github.com/home-assistant/core/pull/71243
[#71369]: https://github.com/home-assistant/core/pull/71369
[#71417]: https://github.com/home-assistant/core/pull/71417
[#71441]: https://github.com/home-assistant/core/pull/71441
[@0bmay]: https://github.com/0bmay
[@balloob]: https://github.com/balloob
[@difelice]: https://github.com/difelice
[@dmulcahey]: https://github.com/dmulcahey
[blueprint docs]: /integrations/blueprint/
[canary docs]: /integrations/canary/
[glances docs]: /integrations/glances/
[zha docs]: /integrations/zha/

## Release 2022.5.3 - May 8

- Move flexit climate to HVAC action ([@balloob] - [#71443]) ([flexit docs])
- Fix display of multiline queries in sql config flow ([@bdraco] - [#71450]) ([sql docs])
- Ensure sql sensors keep working after using the options flow ([@bdraco] - [#71453]) ([sql docs])
- Fix rgb conversion in fibaro light ([@rappenze] - [#71476]) ([fibaro docs])
- Revert usage of Fibaro Client V5 as it has too many errors ([@rappenze] - [#71477]) ([fibaro docs])
- Update py-canary to 0.5.2 ([@0bmay] - [#71489]) ([canary docs])
- bump total_connect_client to 2022.5 ([@austinmroczek] - [#71493]) ([totalconnect docs])
- Add timeout ([@bieniu] - [#71499]) ([brother docs])
- Add Ukraine Alarm integration ([@PaulAnnekov] - [#71501]) ([ukraine_alarm docs]) (new-integration)
- fix speed sensor wrong number ([@shaiu] - [#71502]) ([sabnzbd docs])
- Bump frontend to 20220504.1 ([@balloob] - [#71504]) ([frontend docs])
- Fix other enums in helpers ([@balloob] - [#71505])

[#71443]: https://github.com/home-assistant/core/pull/71443
[#71450]: https://github.com/home-assistant/core/pull/71450
[#71453]: https://github.com/home-assistant/core/pull/71453
[#71476]: https://github.com/home-assistant/core/pull/71476
[#71477]: https://github.com/home-assistant/core/pull/71477
[#71489]: https://github.com/home-assistant/core/pull/71489
[#71493]: https://github.com/home-assistant/core/pull/71493
[#71499]: https://github.com/home-assistant/core/pull/71499
[#71501]: https://github.com/home-assistant/core/pull/71501
[#71502]: https://github.com/home-assistant/core/pull/71502
[#71504]: https://github.com/home-assistant/core/pull/71504
[#71505]: https://github.com/home-assistant/core/pull/71505
[@0bmay]: https://github.com/0bmay
[@PaulAnnekov]: https://github.com/PaulAnnekov
[@austinmroczek]: https://github.com/austinmroczek
[@balloob]: https://github.com/balloob
[@bdraco]: https://github.com/bdraco
[@bieniu]: https://github.com/bieniu
[@rappenze]: https://github.com/rappenze
[@shaiu]: https://github.com/shaiu
[brother docs]: /integrations/brother/
[canary docs]: /integrations/canary/
[fibaro docs]: /integrations/fibaro/
[flexit docs]: /integrations/flexit/
[frontend docs]: /integrations/frontend/
[sabnzbd docs]: /integrations/sabnzbd/
[sql docs]: /integrations/sql/
[totalconnect docs]: /integrations/totalconnect/
[ukraine_alarm docs]: /integrations/ukraine_alarm/

## Release 2022.5.4 - May 12

- Fix timezone issue on onvif integration ([@marvinroger] - [#70473]) ([onvif docs])
- Fix Insteon issue with dimmer default on level ([@teharris1] - [#71426]) ([insteon docs])
- Migrate sabnzbd sensors unique ids ([@shaiu] - [#71455]) ([sabnzbd docs])
- Bump simplisafe-python to 2022.05.1 ([@bachya] - [#71545]) ([simplisafe docs])
- Fix SABnzbd config check ([@shaiu] - [#71549]) ([sabnzbd docs])
- Fix typer/click incompatibilty for unifiprotect ([@AngellusMortis] - [#71555]) ([unifiprotect docs])
- Improve Google Cast detection of HLS playlists ([@emontnemery] - [#71564]) ([cast docs])
- Correct device class for meater cook sensors ([@emontnemery] - [#71565]) ([meater docs])
- Bump pychromecast to 12.1.2 ([@emontnemery] - [#71567]) ([cast docs])
- Bump logi_circle to 0.2.3 ([@evanjd] - [#71578]) ([logi_circle docs])
- Bump nam backend library to version 1.2.4 ([@bieniu] - [#71584]) ([nam docs])
- Bump pydeconz to v92 ([@Kane610] - [#71613]) ([deconz docs])
- Fix wrong brightness level change visible in UI ([@rappenze] - [#71655]) ([fibaro docs])
- Prevent history_stats from rejecting states when microseconds differ ([@bdraco] - [#71704]) ([history_stats docs])
- Fix zwave_js device automation bug ([@raman325] - [#71715]) ([zwave_js docs])
- Fix merge conflict with master to dev in sabnzbd (CI fix) ([@bdraco] - [#71605]) ([sabnzbd docs])
- Add use_wallclock_as_timestamps option to generic ([@uvjustin] - [#71245]) ([generic docs])
- Changed API for Ukraine Alarm ([@PaulAnnekov] - [#71754]) ([ukraine_alarm docs])

[#70473]: https://github.com/home-assistant/core/pull/70473
[#71245]: https://github.com/home-assistant/core/pull/71245
[#71426]: https://github.com/home-assistant/core/pull/71426
[#71455]: https://github.com/home-assistant/core/pull/71455
[#71545]: https://github.com/home-assistant/core/pull/71545
[#71549]: https://github.com/home-assistant/core/pull/71549
[#71555]: https://github.com/home-assistant/core/pull/71555
[#71564]: https://github.com/home-assistant/core/pull/71564
[#71565]: https://github.com/home-assistant/core/pull/71565
[#71567]: https://github.com/home-assistant/core/pull/71567
[#71578]: https://github.com/home-assistant/core/pull/71578
[#71584]: https://github.com/home-assistant/core/pull/71584
[#71605]: https://github.com/home-assistant/core/pull/71605
[#71613]: https://github.com/home-assistant/core/pull/71613
[#71655]: https://github.com/home-assistant/core/pull/71655
[#71704]: https://github.com/home-assistant/core/pull/71704
[#71715]: https://github.com/home-assistant/core/pull/71715
[#71754]: https://github.com/home-assistant/core/pull/71754
[@AngellusMortis]: https://github.com/AngellusMortis
[@Kane610]: https://github.com/Kane610
[@PaulAnnekov]: https://github.com/PaulAnnekov
[@bachya]: https://github.com/bachya
[@bdraco]: https://github.com/bdraco
[@bieniu]: https://github.com/bieniu
[@emontnemery]: https://github.com/emontnemery
[@evanjd]: https://github.com/evanjd
[@marvinroger]: https://github.com/marvinroger
[@raman325]: https://github.com/raman325
[@rappenze]: https://github.com/rappenze
[@shaiu]: https://github.com/shaiu
[@teharris1]: https://github.com/teharris1
[@uvjustin]: https://github.com/uvjustin
[cast docs]: /integrations/cast/
[deconz docs]: /integrations/deconz/
[fibaro docs]: /integrations/fibaro/
[generic docs]: /integrations/generic/
[history_stats docs]: /integrations/history_stats/
[insteon docs]: /integrations/insteon/
[logi_circle docs]: /integrations/logi_circle/
[meater docs]: /integrations/meater/
[nam docs]: /integrations/nam/
[onvif docs]: /integrations/onvif/
[sabnzbd docs]: /integrations/sabnzbd/
[simplisafe docs]: /integrations/simplisafe/
[ukraine_alarm docs]: /integrations/ukraine_alarm/
[unifiprotect docs]: /integrations/unifiprotect/
[zwave_js docs]: /integrations/zwave_js/

## Release 2022.5.5 - May 18

- Refresh camera stream source of Synology DSM connected cameras ([@mib1185] - [#70938])
- Warn user if "model" key is missing from Shelly firmware ([@chemelli74] - [#71612]) ([shelly docs])
- Remove LIFX bulb discovery from the inflight list if it fails to connect ([@Djelibeybi] - [#71673]) ([lifx docs])
- Limit parallel requests in fibaro light ([@rappenze] - [#71762]) ([fibaro docs])
- Fix VeSync air_quality fan attribute ([@jetpacktuxedo] - [#71771]) ([vesync docs])
- Fix handling package detection for latest UniFi Protect beta ([@AngellusMortis] - [#71821]) ([unifiprotect docs])
- Add missing Shelly Cover sensors bugfix ([@RadekHvizdos] - [#71831]) ([shelly docs])
- Revert changing `pysnmp` to `pysnmplib` ([@bieniu] - [#71901]) ([snmp docs]) ([brother docs])
- Suppress Upnp error in SamsungTV resubscribe ([@epenet] - [#71925]) ([samsungtv docs])
- Properly handle Shelly gen2 device disconnect ([@chemelli74] - [#71937]) ([shelly docs])
- Include initial state in history_stats count ([@bdraco] - [#71952]) ([history_stats docs])
- Fix filesize doing IO in event loop ([@thecode] - [#72038]) ([filesize docs])
- Ignore UpnpXmlContentError in SamsungTV ([@epenet] - [#72056]) ([samsungtv docs])
- Cleanup unused import in SamsungTV ([@epenet] - [#72102]) ([samsungtv docs])

[#70938]: https://github.com/home-assistant/core/pull/70938
[#71612]: https://github.com/home-assistant/core/pull/71612
[#71673]: https://github.com/home-assistant/core/pull/71673
[#71762]: https://github.com/home-assistant/core/pull/71762
[#71771]: https://github.com/home-assistant/core/pull/71771
[#71821]: https://github.com/home-assistant/core/pull/71821
[#71831]: https://github.com/home-assistant/core/pull/71831
[#71901]: https://github.com/home-assistant/core/pull/71901
[#71925]: https://github.com/home-assistant/core/pull/71925
[#71937]: https://github.com/home-assistant/core/pull/71937
[#71952]: https://github.com/home-assistant/core/pull/71952
[#72038]: https://github.com/home-assistant/core/pull/72038
[#72056]: https://github.com/home-assistant/core/pull/72056
[#72102]: https://github.com/home-assistant/core/pull/72102
[@AngellusMortis]: https://github.com/AngellusMortis
[@Djelibeybi]: https://github.com/Djelibeybi
[@RadekHvizdos]: https://github.com/RadekHvizdos
[@bdraco]: https://github.com/bdraco
[@bieniu]: https://github.com/bieniu
[@chemelli74]: https://github.com/chemelli74
[@epenet]: https://github.com/epenet
[@jetpacktuxedo]: https://github.com/jetpacktuxedo
[@mib1185]: https://github.com/mib1185
[@rappenze]: https://github.com/rappenze
[@thecode]: https://github.com/thecode
[brother docs]: /integrations/brother/
[fibaro docs]: /integrations/fibaro/
[filesize docs]: /integrations/filesize/
[history_stats docs]: /integrations/history_stats/
[lifx docs]: /integrations/lifx/
[samsungtv docs]: /integrations/samsungtv/
[shelly docs]: /integrations/shelly/
[snmp docs]: /integrations/snmp/
[unifiprotect docs]: /integrations/unifiprotect/
[vesync docs]: /integrations/vesync/

## Need help? Join the community!

Home Assistant has a great community of users who are all more than willing
to help each other out. So, join us!

Our very active [Discord chat server](/join-chat) is an excellent place to be
at, and don't forget to join our amazing [forums](https://community.home-assistant.io/).

Found a bug or issue? Please report it in our [issue tracker](https://github.com/home-assistant/core/issues),
to get it fixed! Or, check [our help page](/help) for guidance for more
places you can go.

Are you more into email? [Sign-up for our Building the Open Home Newsletter](/newsletter)
to get the latest news about features, things happening in our community and
other news about building an Open Home; straight into your inbox.

## Backward-incompatible changes

Below is a listing of the breaking change for this release, per subject or
integration. Click on one of those to read more about the breaking change
for that specific item.

{% details "Configuration Menu" %}

This release contains several changes to the configuration menu. These are the
most important changes.

- The `Configuration` menu has been renamed to `Settings`.
- `Helpers` moved to `Devices & Services`.
- `Blueprints` moved to `Automations & Scenes`.
- `Areas` is now grouped with `Zones.
- Dashboard `Resources` moved to overflow menu*.
- A brand new `System` menu housing all system-related settings:

  - The `Restart` button is available in the `System` menu.
  - New `Updates` menu, which also now provides the ability to join or leave
    the beta channel from the overflow menu*.
  - All logs moved to `Logs` (Supervisor, audio, etc).
  - `Backups` moved from the Supervisor/Main menu to here.
  - `Network` now has all network related settings previously in the General
    settings and Supervisor.
  - `Storage` provides information about used space, eMMC Lifetime, and also
    provides the `Move datadisk` feature in the overflow menu*.
  - `Hardware` now has the `Reboot` and `Restart Host` controls,
    `Available Hardware` is available in the overflow menu*.
  - `System Health` moved to its own menu item in the system menu.
  - Processor and memory usage was moved into the new `System Health` menu.
  - The integration list with timings, previously shown in the `About` menu, is
    moved into the new `System Health` menu.

Additionally, the developers tools has a brand new `YAML` tab, which contains
the buttons and tools to reload and check your YAML configuration. This was
previously known as "Server Controls", but now moved to the developer tools.

\* The overflow menu is the menu you see when you click on the three vertical
   dots in the top right of your screen.

{% enddetails %}

{% details "Temperature conversion" %}

Sensors reporting a temperature but not setting device class to temperature will
no longer have their values automatically converted.
For sensors that are manually configured, users need to set the device class.
If the integration providing the sensor does not support setting device class,
the sensor's state can be filtered through a template sensor.

([@emontnemery] - [#69069])

[@emontnemery]: https://github.com/emontnemery
[#69069]: https://github.com/home-assistant/core/pull/69069

{% enddetails %}

{% details "AVM FRITZ!Box Call Monitor" %}

The previously deprecated YAML configuration of the AVM FRITZ!Box Call Monitor
integration has been removed.

AVM FRITZ!Box Call Monitor is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@cdce8p] - [#70829]) ([documentation](/integrations/fritzbox_callmonitor))

[@cdce8p]: https://github.com/cdce8p
[#70829]: https://github.com/home-assistant/core/pull/70829

{% enddetails %}

{% details "AVM FRITZ!Box Tools" %}

The binary sensor entity showing that an update is available for the FRITZ!Box
firmware has been deprecated and will be removed in Home Assistant 2022.7.

The AVM FRITZ!Box Tools integration now provides an `update` entity as a
replacement.

([@Mask3007] - [#70096]) ([documentation](/integrations/fritz))

[@Mask3007]: https://github.com/Mask3007
[#70096]: https://github.com/home-assistant/core/pull/70096

{% enddetails %}

{% details "BMW Connected Drive" %}

All `bmw_connected_drive.*` services are removed (deprecated since 2022.2).
Please use the new button entities with the `button.press` service instead.

([@rikroe] - [#69808]) ([documentation](/integrations/bmw_connected_drive))

[@rikroe]: https://github.com/rikroe
[#69808]: https://github.com/home-assistant/core/pull/69808

---

The `button.<your_vehicle_refresh` entity is deprecated and will be removed in
a future version. Please use the `homeassistant.update_entity` service with
any BMW entity to force-refresh all platforms from the BMW API.

([@rikroe] - [#67003]) ([documentation](/integrations/bmw_connected_drive))

[@rikroe]: https://github.com/rikroe
[#67003]: https://github.com/home-assistant/core/pull/67003

{% enddetails %}

{% details "deCONZ" %}

Migrating deCONZ Siren entities from switch platform to siren platform has
been removed. This only affects users upgrading from before 2021.10 to 2022.5
or later. At most, this causes lingering unavailable switch entities; which
can be manually removed.

([@Kane610] - [#70600]) ([documentation](/integrations/deconz))

[@Kane610]: https://github.com/Kane610
[#70600]: https://github.com/home-assistant/core/pull/70600

---

Migrated deCONZ light entities of type "On/Off Output" to switch
from light platform as they are binary devices (only on/off).

([@Kane610] - [#70598]) ([documentation](/integrations/deconz))

[@Kane610]: https://github.com/Kane610
[#70598]: https://github.com/home-assistant/core/pull/70598

{% enddetails %}

{% details "Energy" %}

The internal cost and compensation sensor entities, used by the energy
dashboard of Home Assistant, are now hidden by default.

([@frenck] - [#70378]) ([documentation](/integrations/energy))

[@frenck]: https://github.com/frenck
[#70378]: https://github.com/home-assistant/core/pull/70378

{% enddetails %}

{% details "Fibaro" %}

Fibaro lights no longer support deprecated `white_value`,
use `rgbw_color` instead.

([@rappenze] - [#69189]) ([documentation](/integrations/fibaro))

[@rappenze]: https://github.com/rappenze
[#69189]: https://github.com/home-assistant/core/pull/69189

{% enddetails %}

{% details "Flick Electric" %}

Units changed from `cents` to `Â¢/kWh`. This more accurately represents the type
of value, and makes the sensor work when used in the Energy dashboards.

If you relied on this unit of measurement format in your automations, scripts,
or have been recording it in an external time metrics database, you may need
to adapt to this change.

([@ZephireNZ] - [#69396]) ([documentation](/integrations/flick_electric))

[@ZephireNZ]: https://github.com/ZephireNZ
[#69396]: https://github.com/home-assistant/core/pull/69396

{% enddetails %}

{% details "History Stats" %}

The pretty formatted value attribute has been removed in favor of using the
new duration state class, which is formatted by the frontend.

This change significantly reduces the number of rows stored in the database.

([@bdraco] - [#70720]) ([documentation](/integrations/history_stats))

[@bdraco]: https://github.com/bdraco
[#70720]: https://github.com/home-assistant/core/pull/70720

{% enddetails %}

{% details "HomeKit" %}

The device class `carbon_dioxide` is no longer admitted as a `binary_sensor`
device class; as it is not a valid device class for a binary sensor. If you have
overridden the device class with customize you need to adjust your configuration.

([@epenet] - [#69239]) ([documentation](/integrations/homekit))

[@epenet]: https://github.com/epenet
[#69239]: https://github.com/home-assistant/core/pull/69239

{% enddetails %}

{% details "IKEA TRÃ…DFRI" %}

The native IKEA TRÃ…DFRI groups are now removed. We propose using
[light groups](/integrations/group/) instead.

Additionally, the previously deprecated YAML configuration of the IKEA TRÃ…DFRI
integration has been removed.

IKEA TRÃ…DFRI is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@ggravlingen] - [#68033]) ([documentation](/integrations/tradfri))

[@ggravlingen]: https://github.com/ggravlingen
[#68033]: https://github.com/home-assistant/core/pull/68033

{% enddetails %}

{% details "Integration - Riemann sum integral" %}

The Integration sensor `unit` configuration parameter was deprecated in
Home Assistant Core release 2021.10 and is now removed as it did not
take `unit_prefix` and `unit_time` into account.

Example:

```yaml
sensor:
  - platform: integration
    source: sensor.current_power
    name: energy_spent
    unit_prefix: k
    unit_time: h
    unit: MWs
    round: 2
```

The configuration in the example would cause the source sensor's unit
(e.g., `W`) to be overruled and the integration sensor's `unit_of_measurement`
would be set to `MWs` (MegaWatt-Second) even though the integral calculation
was performed with `k` (kilo) and `h` (hour), i.e., the value of the integration
sensor is in `kWh`, not `MWs`.

([@dgomes] - [#69157]) ([documentation](/integrations/integration))

[@dgomes]: https://github.com/dgomes
[#69157]: https://github.com/home-assistant/core/pull/69157

{% enddetails %}

{% details "LIFX" %}

The LIFX integration changed the network adapters used to discover LIFX devices.
Instead of enabling all adapters on which LIFX devices appear, it now only
uses the adapter(s) enabled in Home Assistant.

This makes the discovery of LIFX faster and more reliable.

([@Djelibeybi] - [#70458]) ([documentation](/integrations/lifx))

[@Djelibeybi]: https://github.com/Djelibeybi
[#70458]: https://github.com/home-assistant/core/pull/70458

{% enddetails %}

{% details "Media Player" %}

Media Player now supports a new state, `buffering`. Integrations supporting this state previously reported `playing` but may now report `buffering`. This may also introduce new state transitions between the two states during playback.

In order to maintain previous behavior, replace usage of `playing` with both the `buffering` and `playing` states, and consider how to handle transitions between the two.

([@emontnemery] - [#70863]) ([documentation](/integrations/media_player))

[@emontnemery]: [https://github.com/emontnemery]
[#70863]: https://github.com/home-assistant/core/pull/70863

{% enddetails %}

{% details "Media Source" %}

Filenames and directories starting with a `.` will no longer appear in the
Media Browser.

If the file or directory name starts with a `.`, it means they are marked
hidden; thus, the media browser will now respect that.

([@DDanii] - [#69820]) ([documentation](/integrations/media_source))

[@DDanii]: https://github.com/DDanii
[#69820]: https://github.com/home-assistant/core/pull/69820

{% enddetails %}

{% details "Min/Max" %}

`min_max` sensors generated a significant amount of database rows because they
included all attributes regardless of the configured type. For active sensors,
these attributes added up to multiple megabytes per day for each sensor.
[Reference issue report](https://github.com/home-assistant/core/issues/56987#issuecomment-1100575672).

`min_max` sensors now only set attributes based on the configured type of sensor
as below:

- `min`: `min_entity_id`
- `max`: `max_entity_id`
- `last`: `last_entity_id`

The following attributes are no longer present: `min`, `max`, `mean`, `median`,
`last`, `count_sensors`

If access to the data previously provided by the attributes is needed,
create a separate `min_max` sensor for that required type instead.

([@bdraco] - [#70142]) ([documentation](/integrations/min_max))

[@bdraco]: https://github.com/bdraco
[#70142]: https://github.com/home-assistant/core/pull/70142

{% enddetails %}

{% details "MJPEG IP Camera" %}

The previously deprecated YAML configuration of the MJPEG IP Camera
integration has been removed.

MJPEG IP Camera is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@frenck] - [#68033]) ([documentation](/integrations/mjpeg))

[@frenck]: https://github.com/frenck
[#68980]: https://github.com/home-assistant/core/pull/68980

{% enddetails %}

{% details "ONVIF" %}

The previously deprecated YAML configuration of the ONVIF
integration has been removed.

ONVIF is now configured via the UI, any existing YAML
configuration has been imported in previous releases and can now be safely
removed from your YAML configuration files.

([@hunterjm] - [#70395]) ([documentation](/integrations/onvif))

[@hunterjm]: https://github.com/hunterjm
[#70395]: https://github.com/home-assistant/core/pull/70395

{% enddetails %}

{% details "Pentair ScreenLogic" %}

The original `orp_supply_level` and `ph_supply_level` sensors will become
unavailable. Two new sensors will be automatically created, but the originals
will have to be removed and the new ones manually renamed to match the originals.

This should only affect those with IntelliChem.

([@dieselrabbit] - [#69937]) ([documentation](/integrations/screenlogic))

[@dieselrabbit]: https://github.com/dieselrabbit
[#69937]: https://github.com/home-assistant/core/pull/69937

{% enddetails %}

{% details "Phone Modem" %}

The previously deprecated `modem_callerid.reject_call` service has now been
removed. A button entity has previously been made available as a replacement.

([@frenck] - [#69019]) ([documentation](/integrations/modem_callerid))

[@frenck]: https://github.com/frenck
[#69019]: https://github.com/home-assistant/core/pull/69019

{% enddetails %}

{% details "Radarr" %}

The previously deprecated "Wanted" sensor in the Radarr integration has been
removed. If you have this sensor still configured in your YAML configuration,
you should remove it before updating.

([@tkdrob] - [#69500]) ([documentation](/integrations/radarr))

[@tkdrob]: https://github.com/tkdrob
[#69500]: https://github.com/home-assistant/core/pull/69500

{% enddetails %}

{% details "RainMachine" %}

RainMachine zone switches no longer have the `time_remaining` attribute;
instead, each zone now has a separate sensor entity (device class of `timestamp`,
entity category of `diagnostic`) that shows the datetime at which the zone will
finish (or last finished if the zone isn't running).

([@bachya] - [#69206]) ([documentation](/integrations/rainmachine))

[@bachya]: https://github.com/bachya
[#69206]: https://github.com/home-assistant/core/pull/69206

---

RainMachine switch attributes that are `floats` are now rounded to two decimals
of precision.

([@bachya] - [#70006]) ([documentation](/integrations/rainmachine))

[@bachya]: https://github.com/bachya
[#70006]: https://github.com/home-assistant/core/pull/70006

{% enddetails %}

{% details "Recorder" %}

Home Assistant will now automatically repack your database once a month, on
the second Sunday of the month.

Repacking allows shrinking the database in file size, resulting in smaller
backups. It also frees up the space that has been freed up by the database
optimizations made in 2022.4.

Some notes:

- It is only done once a month to minimize I/O.
- The second Sunday was chosen as it would be out of sync with Home Assistant
  releases.
- This automatic repacking can be disabled by setting `auto_repack` to `false`
  in the recorder configuration.

([@bdraco] - [#69314]) ([documentation](/integrations/recorder))

[@bdraco]: https://github.com/bdraco
[#69314]: https://github.com/home-assistant/core/pull/69314

---

It's no longer possible to configure the recorder to use an in-memory database.

([@emontnemery] - [#69616]) ([documentation](/integrations/recorder))

[@emontnemery]: https://github.com/emontnemery
[#69616]: https://github.com/home-assistant/core/pull/69616

---

Integrations and platforms can provide hints to the recorder to exclude specific
entity state attributes from being recorded.

This excludes attributes that hold little to no historical value or are a
static value. This significantly reduces the amount of data stored.

The following attributes are no longer recorded:

- Automation: `current`, `id`, `last_action`, `last_triggered`, `max` and  `mode`.
- Input Boolean: `editable`.
- Input Button: `editable`.
- Input Datetime: `editable`, `has_date`, and `has_datetime`.
- Input Number: `editable`, `max`, `min`, `mode`, and `step`.
- Input Text: `editable`, `max`, `min`, `mode`, and `pattern`.
- Input Select: `editable`.

([@bdraco] - [#70168] [#70223])

([@frenck] - [#70154] [#70224] [#70225] [#70226])

[@bdraco]: https://github.com/bdraco
[@frenck]: https://github.com/frenck
[#70154]: https://github.com/home-assistant/core/pull/70154
[#70168]: https://github.com/home-assistant/core/pull/70168
[#70223]: https://github.com/home-assistant/core/pull/70223
[#70224]: https://github.com/home-assistant/core/pull/70224
[#70225]: https://github.com/home-assistant/core/pull/70225
[#70226]: https://github.com/home-assistant/core/pull/70226
[#70227]: https://github.com/home-assistant/core/pull/70227

{% enddetails %}

{% details "SABnzbd" %}

The SABnzbd integration migrated to configuration
via the UI. Configuring SABnzbd via YAML configuration
has been deprecated and will be removed in a future Home Assistant release.

Your existing YAML configuration is automatically imported on upgrade to this
release; and thus can be safely removed from your YAML configuration
after upgrading.

([@shaiu] - [#68138]) ([documentation](/integrations/sabnzbd))

[@shaiu]: https://github.com/shaiu
[#68138]: https://github.com/home-assistant/core/pull/68138

{% enddetails %}

{% details "Sensibo" %}

The binary sensor for the update available has been removed.
Use the new `update` entities to monitor available updates instead.

([@gjohansson-ST] - [#70180]) ([documentation](/integrations/sensibo))

[@gjohansson-ST]: https://github.com/gjohansson-ST
[#70180]: https://github.com/home-assistant/core/pull/70180

{% enddetails %}

{% details "Sonos" %}

The `sonos_group` attribute on Sonos media players has been renamed
to `group_members` to align with other integrations.

([@jjlawren] - [#70924]) ([documentation](/integrations/sonos))

[@jjlawren]: https://github.com/jjlawren
[#70924]: https://github.com/home-assistant/core/pull/70924

{% enddetails %}

{% details "SQL" %}

The SQL integration migrated to configuration
via the UI. Configuring SQL via YAML configuration
has been deprecated and will be removed in a future Home Assistant release.

Your existing YAML configuration is automatically imported on upgrade to this
release; and thus can be safely removed from your YAML configuration
after upgrading.

([@gjohansson-ST] - [#68700]) ([documentation](/integrations/sql))

[@gjohansson-ST]: https://github.com/gjohansson-ST
[#68700]: https://github.com/home-assistant/core/pull/68700

{% enddetails %}

{% details "Steam" %}

The Steam integration migrated to configuration
via the UI. Configuring Steam via YAML configuration
has been deprecated and will be removed in a future Home Assistant release.

Your existing YAML configuration is automatically imported on upgrade to this
release; and thus can be safely removed from your YAML configuration
after upgrading.

The first account listed in the YAML configuration will be considered as your
Steam ID as there is no way to identify your Steam ID from your API key. You
can put your Steam ID as the first entry in accounts before updating, or set up
the integration from scratch.

([@tkdrob] - [#67261]) ([documentation](/integrations/steam_online))

[@tkdrob]: https://github.com/tkdrob
[#67261]: https://github.com/home-assistant/core/pull/67261

{% enddetails %}

{% details "Synology DSM" %}

The naming of entities and devices has been aligned, so that the device name
is now part of the entity name.

([@mib1185] - [#69754]) ([documentation](/integrations/synology_dsm))

[@mib1185]: https://github.com/mib1185
[#69754]: https://github.com/home-assistant/core/pull/69754

{% enddetails %}

{% details "Tautulli" %}

The Tautulli integration migrated to configuration
via the UI. Configuring Tautulli via YAML configuration
has been deprecated and will be removed in a future Home Assistant release.

Your existing YAML configuration is automatically imported on upgrade to this
release; and thus can be safely removed from your YAML configuration
after upgrading.

([@tkdrob] - [#57450]) ([documentation](/integrations/tautulli))

[@tkdrob]: https://github.com/tkdrob
[#57450]: https://github.com/home-assistant/core/pull/57450

{% enddetails %}

{% details "Templates" %}

Trigger-based template sensors are now initialized to the last known state at
Home Assistant startup, instead of to "unknown".

([@emontnemery] - [#69344]) ([documentation](/integrations/template))

[@emontnemery]: https://github.com/emontnemery
[#69344]: https://github.com/home-assistant/core/pull/69344

{% enddetails %}

{% details "text-to-speech (TTS)" %}

The TTS `base_url` option is deprecated. Please, configure internal/external
URL instead.

([@balloob] - [#70382]) ([documentation](/integrations/tts))

[@balloob]: https://github.com/balloob
[#70382]: https://github.com/home-assistant/core/pull/70382

{% enddetails %}

{% details "UPnP/IGD" %}

The UPnP/IGD integration options have been removed. This includes the
ability to configure a custom update/scan interval.

As an alternative, the more generic and more flexible
`homeassistant.update_entity` service can be used to create an automation that
updates the entities on your desired intervals or schedule.

([@StevenLooman] - [#69134]) ([documentation](/integrations/upnp))

[@StevenLooman]: https://github.com/StevenLooman
[#69134]: https://github.com/home-assistant/core/pull/69134

{% enddetails %}

{% details "Vera" %}

Vera power meter sensor is now using the (correct) symbol `W` for watt instead
of `watts`.

If you relied on this unit of measurement format in your automations, scripts,
or have been recording it in an external time metrics database, you may need
to adapt to this change.

([@emontnemery] - [#69285]) ([documentation](/integrations/vera))

[@emontnemery]: https://github.com/emontnemery
[#69285]: https://github.com/home-assistant/core/pull/69285

{% enddetails %}

{% details "Z-Wave JS" %}

With this release, you will need to update your zwave-js-server instance.

- If you use the zwave_js add-on, you need to have at least version `0.1.56`.
- If you use the Z-Wave JS 2 MQTT add-on, you need to have at least version `0.38.0`.
- If you use the zwavejs2mqtt Docker container, you need to have at least version `6.7.0`.
- If you run your own Docker container, or some other installation method,
  you will need to update your zwave-js-server instance to at least `1.16.0`.

([@raman325] - [#70464]) ([documentation](/integrations/zwave_js))

[@raman325]: https://github.com/raman325
[#70464]: https://github.com/home-assistant/core/pull/70464

{% enddetails %}

{% details "Zengge" %}

Zengge lights no longer support `white_value`, please use `white` instead.

([@emontnemery] - [#55260]) ([documentation](/integrations/zengge))

[@emontnemery]: https://github.com/emontnemery
[#55260]: https://github.com/home-assistant/core/pull/55260

{% enddetails %}

If you are a custom integration developer and want to learn about breaking
changes and new features available for your integration: Be sure to follow our
[developer blog][devblog]. The following are the most notable for this release:

[devblog]: https://developers.home-assistant.io/blog/

- [Calendar Data Model improvements and deprecations](https://developers.home-assistant.io/blog/2022/04/18/calendar-data-model)
- [Deprecating all SUPPORT_* constants](https://developers.home-assistant.io/blog/2022/04/02/support-constants-deprecation)
- [Local OAuth2 Updates](https://developers.home-assistant.io/blog/2022/04/16/local-oauth2)
- [Saying goodbye to the time_changed event](https://developers.home-assistant.io/blog/2022/04/20/saying-goodbye-to-event_time_changed)
- [Constant deprecations for 2022.5](https://developers.home-assistant.io/blog/2022/05/03/constants-deprecations/)

## Farewell to the following

The following integrations are also no longer available as of this release:

- **Arlo** has been removed. It was in a broken state for a long time caused
  by authentication changes upstream. ([@anaisbetts] - [#70330])
- **Digital Loggers** has been removed. It relied on web scraping, which is
  [not allowed][ADR-0004] for a Home Assistant Core integration.
  ([@tkdrob] - [#69939])
- **Updater** was previously deprecated and has been removed. Use the [Version]
  and [Analytics] integrations as a replacement.
  ([@frenck] - [#68981])

[@anaisbetts]: https://github.com/anaisbetts
[@frenck]: https://github.com/frenck
[@tkdrob]: https://github.com/tkdrob
[#68981]: https://github.com/home-assistant/core/pull/68981
[#69939]: https://github.com/home-assistant/core/pull/69939
[#70330]: https://github.com/home-assistant/core/pull/70330
[ADR-0004]: https://github.com/home-assistant/architecture/blob/master/adr/0004-webscraping.md?rgh-link-date=2022-04-12T21%3A46%3A17Z
[Analytics]: /integrations/analytics
[Version]: /integrations/version

## All changes

Of course, there is a lot more in this release. You can find a list of
all changes made here: [Full changelog for Home Assistant Core 2022.5](/changelogs/core-2022.5)
